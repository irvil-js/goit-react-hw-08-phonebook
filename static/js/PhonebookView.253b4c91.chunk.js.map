{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","App.module.css","redux/phonebook/phonebook-selectors.js","services/phonebookShelf-api.js","redux/phonebook/phonebook-operation.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Section/Section.js","views/PhonebookView.js"],"names":["module","exports","getItems","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContact","createSelector","normalizeFilter","toLowerCase","contact","name","includes","fetchContact","a","axios","get","data","post","contactId","delete","defaults","baseURL","addContact","number","dispatch","addContactRequest","phonebookShelfAPI","then","toast","success","addContactSuccess","catch","addContactError","deleteContact","deleteContactRequest","deleteContactSuccess","deleteContactError","ContactForm","useSelector","useDispatch","useState","setName","setNumber","reset","className","styles","form","onSubmit","event","preventDefault","repeat","repeatName","find","repeatContact","length","warn","autoComplete","label","input","type","placeholder","value","onChange","target","htmlFor","defaultCountry","id","formatPhoneNumberIntl","String","button","Filter","changeFilter","ContactItem","onDeleteContact","item","onClick","ContactList","useEffect","fetchContactRequest","fetchContactSuccess","fetchContactError","list","map","Section","title","children","section","defaultProps","PhonebookView","wrapper","message","Loader"],"mappings":"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","file":"static/js/PhonebookView.253b4c91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Prjb\",\"item\":\"ContactList_item__3BFus\",\"name\":\"ContactList_name__3DoV9\",\"number\":\"ContactList_number__l8wS6\",\"button\":\"ContactList_button__Ebubr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__97jzX\",\"label\":\"ContactForm_label__1AcdW\",\"input\":\"ContactForm_input__1q4LP\",\"button\":\"ContactForm_button__2HBDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3cCy6\",\"input\":\"Filter_input__zLZhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2gIm1\",\"title\":\"Section_title__iP10t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__GVI7C\",\"loader\":\"App_loader__2mXrb\",\"error\":\"App_error__iCfAQ\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getVisibleContact = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  },\r\n);\r\n// без мемоизации\r\n// export const getVisibleContact = state => {\r\n//   const contacts = getItems(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   const normalizeFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizeFilter),\r\n//   );\r\n// };\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport async function fetchContact() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  return await axios.post('/contacts', contact);\r\n}\r\nexport async function deleteContact(contactId) {\r\n  return await axios.delete(`/contacts/${contactId}`);\r\n}\r\n","import {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\nimport * as phonebookShelfAPI from '../../services/phonebookShelf-api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const data = await phonebookShelfAPI.fetchContact();\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  phonebookShelfAPI\r\n    .addContact(contact)\r\n    .then(({ data }) => {\r\n      toast.success(`Контакт ${name} добавлен`);\r\n      dispatch(addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  phonebookShelfAPI\r\n    .deleteContact(contactId)\r\n    .then(() => {\r\n      toast.success('Контакт удален');\r\n      dispatch(deleteContactSuccess(contactId));\r\n    })\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getItems, addContact } from 'redux/phonebook';\r\nimport styles from './ContactForm.module.css';\r\n\r\nimport PhoneInput, {\r\n  formatPhoneNumberIntl,\r\n} from 'react-phone-number-input/input';\r\n\r\nexport default function ContactForm() {\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  // const handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n\r\n  //   switch (name) {\r\n  //     case 'name':\r\n  //       setName(value);\r\n  //       break;\r\n  //     case 'number':\r\n  //       setNumber(value);\r\n  //       break;\r\n  //     default:\r\n  //       return;\r\n  //   }\r\n  // };\r\n\r\n  const handleNameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleNumberChange = event => {\r\n    const value = formatPhoneNumberIntl(String(event));\r\n    setNumber(value);\r\n  };\r\n  const repeatContact = name => {\r\n    const repeatName = name.toLowerCase();\r\n    return items.find(contact => contact.name === repeatName);\r\n  };\r\n  const formAddContact = () => dispatch(addContact(name, number));\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const repeat = repeatContact(name);\r\n    if (name.length < 2) {\r\n      toast.warn(\r\n        `Текст должен быть не меньше 2 символов, сейчас ${name.length}`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (number.length < 5) {\r\n      toast.warn(\r\n        `Номер должен быть не меньше 5 символов, сейчас ${number.length}`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    repeat ? toast.error(`${name} уже существует!`) : formAddContact();\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          placeholder=\"Name contact\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label} htmlFor=\"formNumber\">\r\n        Number\r\n        <PhoneInput\r\n          className={styles.input}\r\n          defaultCountry=\"UA\"\r\n          id=\"formNumber\"\r\n          value={number}\r\n          name=\"number\"\r\n          placeholder=\"Number contact\"\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport { getFilter, changeFilter } from 'redux/phonebook';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = event => dispatch(changeFilter(event.target.value));\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport styles from './ContactList.module.css';\r\nimport {\r\n  getVisibleContact,\r\n  deleteContact,\r\n  fetchContact,\r\n} from 'redux/phonebook';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section>\r\n      <h2>Contacts</h2>\r\n\r\n      <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            id={id}\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","import { useSelector } from 'react-redux';\r\nimport ContactsForm from 'components/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/ContactList';\r\nimport Loader from 'components/Loader';\r\nimport Section from 'components/Section';\r\nimport styles from '../App.module.css';\r\n\r\nimport { getLoading, getError } from 'redux/phonebook';\r\n\r\nconst PhonebookView = () => {\r\n  const loading = useSelector(getLoading);\r\n\r\n  const error = useSelector(getError);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {error ? (\r\n        <h1 className=\"error\">{error.message}</h1>\r\n      ) : (\r\n        <Section title=\"Add new contact\">\r\n          {/* <h1>Phonebook</h1> */}\r\n          <ContactsForm />\r\n        </Section>\r\n      )}\r\n\r\n      <Section title=\"All contacts\">\r\n        <Filter />\r\n        {loading && <Loader />}\r\n\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\nexport default PhonebookView;\r\n"],"sourceRoot":""}